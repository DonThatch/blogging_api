paths:
  /user/register:
    post:
      summary: Create a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created
        '401':
          description: Unauthorized
  /user/login:
    post:
      summary: Login a user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in
        '400':
          description: Invalid email or password
        '500':
          description: Internal server error
  /user:
    get:
      summary: Get all users
      tags:
        - User
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    email:
                      type: string
                    username:
                      type: string
        '500':
          description: Internal server error
  /user/{id}:
    get:
      summary: Get a user by ID
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
        '401':
          description: Unauthorized
        '404':
          description: User not found
    put:
      summary: Modify a user by ID
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User updated
        '401':
          description: Unauthorized
        '404':
          description: User not found
    delete:
      summary: Delete a user by ID
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted
        '401':
          description: Unauthorized
        '404':
          description: User not found
  /post:
    post:
      summary: Create a new post
      tags:
        - Post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: Post created
        '401':
          description: Unauthorized
  /post/{id}:
    get:
      summary: Get a post by ID
      tags:
        - Post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post found
        '401':
          description: Unauthorized
        '404':
          description: Post not found
    put:
      summary: Modify a post by ID
      tags:
        - Post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '200':
          description: Post updated
        '401':
          description: Unauthorized
        '404':
          description: Post not found
    delete:
      summary: Delete a post by ID
      tags:
        - Post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post deleted
        '401':
          description: Unauthorized
        '404':
          description: Post not found
  /post/{id}/comments:
    get:
      summary: Get comments for a post by ID
      tags:
        - Post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Comments found
        '401':
          description: Unauthorized
        '404':
          description: Post not found
  /post/{id}/like:
    get:
      summary: Get likes for a post by ID
      tags:
        - Post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Likes found
        '401':
          description: Unauthorized
        '404':
          description: Post not found
  /like/{id}:
    post:
      summary: Like a post by ID
      tags:
        - Like
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post liked
        '500':
          description: Internal server error
    delete:
      summary: Unlike a post by ID
      tags:
        - Like
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post unliked
        '404':
          description: Like not found
        '500':
          description: Internal server error
  /comment:
    post:
      summary: Create a new comment
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: Comment created
        '401':
          description: Unauthorized
  /comment/{id}:
    get:
      summary: Get a comment by ID
      tags:
        - Comment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Comment found
        '401':
          description: Unauthorized
        '404':
          description: Comment not found
    put:
      summary: Modify a comment by ID
      tags:
        - Comment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '200':
          description: Comment updated
        '401':
          description: Unauthorized
        '404':
          description: Comment not found
    delete:
      summary: Delete a comment by ID
      tags:
        - Comment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Comment deleted
        '401':
          description: Unauthorized
        '404':
          description: Comment not found
